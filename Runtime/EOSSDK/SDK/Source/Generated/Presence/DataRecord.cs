// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Presence
{
	/// <summary>
	/// An individual presence data record that belongs to a <see cref="Info" /> object. This object is released when its parent <see cref="Info" /> object is released.
	/// <see cref="Info" />
	/// </summary>
	public struct DataRecord
	{
		/// <summary>
		/// The name of this data
		/// </summary>
		public Utf8String Key { get; set; }

		/// <summary>
		/// The value of this data
		/// </summary>
		public Utf8String Value { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct DataRecordInternal : IGettable<DataRecord>, ISettable<DataRecord>
	{
		private int m_ApiVersion;
		private IntPtr m_Key;
		private IntPtr m_Value;

		public void Get(out DataRecord other)
		{
			other = default;
			
			Utf8String KeyPublic;
			Helper.Get(m_Key, out KeyPublic);
			other.Key = KeyPublic;
			Utf8String ValuePublic;
			Helper.Get(m_Value, out ValuePublic);
			other.Value = ValuePublic;
		}

		public void Set(ref DataRecord other)
		{
			Dispose();

			m_ApiVersion = PresenceInterface.DATARECORD_API_LATEST;
			Helper.Set(other.Key, ref m_Key);
			Helper.Set(other.Value, ref m_Value);
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_Key);
			Helper.Dispose(ref m_Value);
		}
	}
}
