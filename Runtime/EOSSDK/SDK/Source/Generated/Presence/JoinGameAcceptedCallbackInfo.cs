// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Presence
{
	/// <summary>
	/// Output parameters for the <see cref="OnJoinGameAcceptedCallback" /> Function.
	/// </summary>
	public struct JoinGameAcceptedCallbackInfo : ICallbackInfo
	{
		/// <summary>
		/// Context that was passed into <see cref="PresenceInterface.AddNotifyJoinGameAccepted" />
		/// </summary>
		public object ClientData { get; set; }

		/// <summary>
		/// The Join Info custom game-data <see cref="Utf8String" /> to use to join the target user.
		/// Set to a <see langword="null" /> <see cref="IntPtr" /> to delete the value.
		/// </summary>
		public Utf8String JoinInfo { get; set; }

		/// <summary>
		/// The Epic Account ID of the user who accepted the invitation
		/// </summary>
		public EpicAccountId LocalUserId { get; set; }

		/// <summary>
		/// The Epic Account ID of the user who sent the invitation
		/// </summary>
		public EpicAccountId TargetUserId { get; set; }

		/// <summary>
		/// If the value is not <see cref="UI.UIInterface.EVENTID_INVALID" /> then it must be passed back to the SDK using <see cref="UI.UIInterface.AcknowledgeEventId" />.
		/// This should be done after attempting to join the game and either succeeding or failing to connect.
		/// This is necessary to allow the Social Overlay UI to manage the `Join` button.
		/// </summary>
		public ulong UiEventId { get; set; }

		public object GetClientData()
		{
			return ClientData;
		}

		public Result? GetResultCode()
		{
			return null;
		}
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct JoinGameAcceptedCallbackInfoInternal : ICallbackInfoInternal, IGettable<JoinGameAcceptedCallbackInfo>
	{
		private IntPtr m_ClientData;
		private IntPtr m_JoinInfo;
		private IntPtr m_LocalUserId;
		private IntPtr m_TargetUserId;
		private ulong m_UiEventId;

		public IntPtr ClientDataPointer
		{
			get
			{
				return m_ClientData;
			}
		}

		public void Get(out JoinGameAcceptedCallbackInfo other)
		{
			other = default;
			
			object ClientDataPublic;
			Helper.Get(m_ClientData, out ClientDataPublic);
			other.ClientData = ClientDataPublic;
			Utf8String JoinInfoPublic;
			Helper.Get(m_JoinInfo, out JoinInfoPublic);
			other.JoinInfo = JoinInfoPublic;
			EpicAccountId LocalUserIdPublic;
			Helper.Get(m_LocalUserId, out LocalUserIdPublic);
			other.LocalUserId = LocalUserIdPublic;
			EpicAccountId TargetUserIdPublic;
			Helper.Get(m_TargetUserId, out TargetUserIdPublic);
			other.TargetUserId = TargetUserIdPublic;
			other.UiEventId = m_UiEventId;
		}
	}
}
