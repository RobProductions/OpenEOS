// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Presence
{
	/// <summary>
	/// Data for the <see cref="PresenceModification.SetJoinInfo" /> function.
	/// </summary>
	public struct PresenceModificationSetJoinInfoOptions
	{
		/// <summary>
		/// The <see cref="Utf8String" /> which will be advertised as this player's join info.
		/// An application is expected to freely define the meaning of this <see cref="Utf8String" /> to use for connecting to an active game session.
		/// The <see cref="Utf8String" /> should not exceed <see cref="PresenceInterface.PRESENCEMODIFICATION_JOININFO_MAX_LENGTH" /> in length.
		/// This affects the ability of the Social Overlay to show game related actions to take in the player's social graph.
		/// The Social Overlay can handle only one of the following three options at a time:
		/// * using the bPresenceEnabled flags within the Sessions interface
		/// * using the bPresenceEnabled flags within the Lobby interface
		/// * using <see cref="PresenceModification.SetJoinInfo" />
		/// <see cref="Lobby.CreateLobbyOptions" />
		/// <see cref="Lobby.JoinLobbyOptions" />
		/// <see cref="Sessions.CreateSessionModificationOptions" />
		/// <see cref="Sessions.JoinSessionOptions" />
		/// </summary>
		public Utf8String JoinInfo { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct PresenceModificationSetJoinInfoOptionsInternal : ISettable<PresenceModificationSetJoinInfoOptions>
	{
		private int m_ApiVersion;
		private IntPtr m_JoinInfo;

		public void Set(ref PresenceModificationSetJoinInfoOptions other)
		{
			Dispose();

			m_ApiVersion = PresenceInterface.PRESENCEMODIFICATION_SETJOININFO_API_LATEST;
			Helper.Set(other.JoinInfo, ref m_JoinInfo);
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_JoinInfo);
		}
	}
}
