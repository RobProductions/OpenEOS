// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

#if UNITY_ANDROID || __ANDROID__
	#define EOS_PLATFORM_ANDROID
#endif

#if EOS_PLATFORM_ANDROID
using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Platform
{
	/// <summary>
	/// Options for initializing mount paths required for some platforms.
	/// </summary>
	public struct AndroidInitializeOptionsSystemInitializeOptions
	{
		/// <summary>
		/// Reserved, set to <see langword="null" />
		/// </summary>
		public IntPtr Reserved { get; set; }

		/// <summary>
		/// Full internal directory path. Can be <see langword="null" />
		/// </summary>
		public Utf8String OptionalInternalDirectory { get; set; }

		/// <summary>
		/// Full external directory path. Can be <see langword="null" />
		/// </summary>
		public Utf8String OptionalExternalDirectory { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct AndroidInitializeOptionsSystemInitializeOptionsInternal : ISettable<AndroidInitializeOptionsSystemInitializeOptions>
	{
		private int m_ApiVersion;
		private IntPtr m_Reserved;
		private IntPtr m_OptionalInternalDirectory;
		private IntPtr m_OptionalExternalDirectory;

		public void Set(ref AndroidInitializeOptionsSystemInitializeOptions other)
		{
			Dispose();

			m_ApiVersion = PlatformInterface.ANDROID_INITIALIZEOPTIONS_API_LATEST;
			m_Reserved = other.Reserved;
			Helper.Set(other.OptionalInternalDirectory, ref m_OptionalInternalDirectory);
			Helper.Set(other.OptionalExternalDirectory, ref m_OptionalExternalDirectory);
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_Reserved);
			Helper.Dispose(ref m_OptionalInternalDirectory);
			Helper.Dispose(ref m_OptionalExternalDirectory);
		}
	}
}
#endif
