// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Sanctions
{
	/// <summary>
	/// Input parameters for the <see cref="SanctionsInterface.CreatePlayerSanctionAppeal" /> function.
	/// </summary>
	public struct CreatePlayerSanctionAppealOptions
	{
		/// <summary>
		/// The Product User ID of the local user sending their own sanction appeal.
		/// </summary>
		public ProductUserId LocalUserId { get; set; }

		/// <summary>
		/// Reason code for the appeal.
		/// </summary>
		public SanctionAppealReason Reason { get; set; }

		/// <summary>
		/// A unique identifier for the specific sanction
		/// </summary>
		public Utf8String ReferenceId { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct CreatePlayerSanctionAppealOptionsInternal : ISettable<CreatePlayerSanctionAppealOptions>
	{
		private int m_ApiVersion;
		private IntPtr m_LocalUserId;
		private SanctionAppealReason m_Reason;
		private IntPtr m_ReferenceId;

		public void Set(ref CreatePlayerSanctionAppealOptions other)
		{
			Dispose();

			m_ApiVersion = SanctionsInterface.CREATEPLAYERSANCTIONAPPEAL_API_LATEST;
			Helper.Set(other.LocalUserId, ref m_LocalUserId);
			m_Reason = other.Reason;
			Helper.Set(other.ReferenceId, ref m_ReferenceId);
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_LocalUserId);
			Helper.Dispose(ref m_ReferenceId);
		}
	}
}
