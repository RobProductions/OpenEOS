// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.UserInfo
{
	/// <summary>
	/// A structure that contains the user information. These structures are created by <see cref="UserInfoInterface.CopyUserInfo" /> and must be passed to <see cref="UserInfoInterface.Release" />.
	/// </summary>
	public struct UserInfoData
	{
		/// <summary>
		/// The Epic Account ID of the user
		/// </summary>
		public EpicAccountId UserId { get; set; }

		/// <summary>
		/// The name of the owner's country. This may be <see langword="null" />
		/// </summary>
		public Utf8String Country { get; set; }

		/// <summary>
		/// The display name (un-sanitized). This may be <see langword="null" />
		/// </summary>
		public Utf8String DisplayName { get; set; }

		/// <summary>
		/// The ISO 639 language code for the user's preferred language. This may be <see langword="null" />
		/// </summary>
		public Utf8String PreferredLanguage { get; set; }

		/// <summary>
		/// A nickname/alias for the target user assigned by the local user. This may be <see langword="null" />
		/// </summary>
		public Utf8String Nickname { get; set; }

		/// <summary>
		/// The raw display name (sanitized). This may be <see langword="null" />
		/// </summary>
		public Utf8String DisplayNameSanitized { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct UserInfoDataInternal : IGettable<UserInfoData>
	{
		private int m_ApiVersion;
		private IntPtr m_UserId;
		private IntPtr m_Country;
		private IntPtr m_DisplayName;
		private IntPtr m_PreferredLanguage;
		private IntPtr m_Nickname;
		private IntPtr m_DisplayNameSanitized;

		public void Get(out UserInfoData other)
		{
			other = default;
			
			EpicAccountId UserIdPublic;
			Helper.Get(m_UserId, out UserIdPublic);
			other.UserId = UserIdPublic;
			Utf8String CountryPublic;
			Helper.Get(m_Country, out CountryPublic);
			other.Country = CountryPublic;
			Utf8String DisplayNamePublic;
			Helper.Get(m_DisplayName, out DisplayNamePublic);
			other.DisplayName = DisplayNamePublic;
			Utf8String PreferredLanguagePublic;
			Helper.Get(m_PreferredLanguage, out PreferredLanguagePublic);
			other.PreferredLanguage = PreferredLanguagePublic;
			Utf8String NicknamePublic;
			Helper.Get(m_Nickname, out NicknamePublic);
			other.Nickname = NicknamePublic;
			Utf8String DisplayNameSanitizedPublic;
			Helper.Get(m_DisplayNameSanitized, out DisplayNameSanitizedPublic);
			other.DisplayNameSanitized = DisplayNameSanitizedPublic;
		}
	}
}
