// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.UserInfo
{
	/// <summary>
	/// Contains information about a single external user info.
	/// </summary>
	public struct ExternalUserInfo
	{
		/// <summary>
		/// The type of the external account
		/// </summary>
		public ExternalAccountType AccountType { get; set; }

		/// <summary>
		/// The ID of the external account. Can be <see langword="null" />
		/// </summary>
		public Utf8String AccountId { get; set; }

		/// <summary>
		/// The display name of the external account (un-sanitized). Can be <see langword="null" />
		/// </summary>
		public Utf8String DisplayName { get; set; }

		/// <summary>
		/// The display name of the external account (sanitized). Can be <see langword="null" />
		/// </summary>
		public Utf8String DisplayNameSanitized { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct ExternalUserInfoInternal : IGettable<ExternalUserInfo>
	{
		private int m_ApiVersion;
		private ExternalAccountType m_AccountType;
		private IntPtr m_AccountId;
		private IntPtr m_DisplayName;
		private IntPtr m_DisplayNameSanitized;

		public void Get(out ExternalUserInfo other)
		{
			other = default;
			
			other.AccountType = m_AccountType;
			Utf8String AccountIdPublic;
			Helper.Get(m_AccountId, out AccountIdPublic);
			other.AccountId = AccountIdPublic;
			Utf8String DisplayNamePublic;
			Helper.Get(m_DisplayName, out DisplayNamePublic);
			other.DisplayName = DisplayNamePublic;
			Utf8String DisplayNameSanitizedPublic;
			Helper.Get(m_DisplayNameSanitized, out DisplayNameSanitizedPublic);
			other.DisplayNameSanitized = DisplayNameSanitizedPublic;
		}
	}
}
