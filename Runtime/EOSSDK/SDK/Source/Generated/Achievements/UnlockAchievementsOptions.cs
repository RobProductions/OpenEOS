// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Achievements
{
	/// <summary>
	/// Input parameters for the <see cref="AchievementsInterface.UnlockAchievements" /> function.
	/// </summary>
	public struct UnlockAchievementsOptions
	{
		/// <summary>
		/// The Product User ID for the user whose achievements we want to unlock.
		/// </summary>
		public ProductUserId UserId { get; set; }

		/// <summary>
		/// An array of Achievement IDs to unlock.
		/// </summary>
		public Utf8String[] AchievementIds { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct UnlockAchievementsOptionsInternal : ISettable<UnlockAchievementsOptions>
	{
		private int m_ApiVersion;
		private IntPtr m_UserId;
		private IntPtr m_AchievementIds;
		private uint m_AchievementsCount;

		public void Set(ref UnlockAchievementsOptions other)
		{
			Dispose();

			m_ApiVersion = AchievementsInterface.UNLOCKACHIEVEMENTS_API_LATEST;
			Helper.Set(other.UserId, ref m_UserId);
			Helper.Set(other.AchievementIds, ref m_AchievementIds, out m_AchievementsCount, true);
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_UserId);
			Helper.Dispose(ref m_AchievementIds);
		}
	}
}
