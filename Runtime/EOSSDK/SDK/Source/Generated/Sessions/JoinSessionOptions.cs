// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Sessions
{
	/// <summary>
	/// Input parameters for the <see cref="SessionsInterface.JoinSession" /> function.
	/// </summary>
	public struct JoinSessionOptions
	{
		/// <summary>
		/// Name of the session to create after joining session
		/// </summary>
		public Utf8String SessionName { get; set; }

		/// <summary>
		/// Session handle to join
		/// </summary>
		public SessionDetails SessionHandle { get; set; }

		/// <summary>
		/// The Product User ID of the local user who is joining the session
		/// </summary>
		public ProductUserId LocalUserId { get; set; }

		/// <summary>
		/// Determines whether or not this session should be the one associated with the local user's presence information.
		/// If <see langword="true" />, this session will be associated with presence. Only one session at a time can have this flag <see langword="true" />.
		/// This affects the ability of the Social Overlay to show game related actions to take in the user's social graph.
		/// The Social Overlay can handle only one of the following three options at a time:
		/// * using the bPresenceEnabled flags within the Sessions interface
		/// * using the bPresenceEnabled flags within the Lobby interface
		/// * using <see cref="Presence.PresenceModification.SetJoinInfo" />
		/// <see cref="Presence.PresenceModificationSetJoinInfoOptions" />
		/// <see cref="Lobby.CreateLobbyOptions" />
		/// <see cref="Lobby.JoinLobbyOptions" />
		/// <see cref="CreateSessionModificationOptions" />
		/// </summary>
		public bool PresenceEnabled { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct JoinSessionOptionsInternal : ISettable<JoinSessionOptions>
	{
		private int m_ApiVersion;
		private IntPtr m_SessionName;
		private IntPtr m_SessionHandle;
		private IntPtr m_LocalUserId;
		private int m_PresenceEnabled;

		public void Set(ref JoinSessionOptions other)
		{
			Dispose();

			m_ApiVersion = SessionsInterface.JOINSESSION_API_LATEST;
			Helper.Set(other.SessionName, ref m_SessionName);
			Helper.Set(other.SessionHandle, ref m_SessionHandle);
			Helper.Set(other.LocalUserId, ref m_LocalUserId);
			Helper.Set(other.PresenceEnabled, ref m_PresenceEnabled);
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_SessionName);
			Helper.Dispose(ref m_SessionHandle);
			Helper.Dispose(ref m_LocalUserId);
		}
	}
}
