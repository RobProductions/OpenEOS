// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Sessions
{
	/// <summary>
	/// Common settings associated with a single session
	/// </summary>
	public struct SessionDetailsSettings
	{
		/// <summary>
		/// The main indexed parameter for this session, can be any <see cref="Utf8String" /> (i.e. "Region:GameMode")
		/// </summary>
		public Utf8String BucketId { get; set; }

		/// <summary>
		/// Number of total players allowed in the session
		/// </summary>
		public uint NumPublicConnections { get; set; }

		/// <summary>
		/// Are players allowed to join the session while it is in the "in progress" state
		/// </summary>
		public bool AllowJoinInProgress { get; set; }

		/// <summary>
		/// Permission level describing allowed access to the session when joining or searching for the session
		/// </summary>
		public OnlineSessionPermissionLevel PermissionLevel { get; set; }

		/// <summary>
		/// Are players allowed to send invites for the session
		/// </summary>
		public bool InvitesAllowed { get; set; }

		/// <summary>
		/// Are sanctioned players allowed to join - sanctioned players will be rejected if set to <see langword="true" />
		/// </summary>
		public bool SanctionsEnabled { get; set; }

		/// <summary>
		/// Array of platform IDs indicating the player platforms allowed to register with the session. Platform IDs are
		/// found in the EOS header file, e.g. <see cref="Common.OPT_EPIC" />. For some platforms, the value will be in the EOS Platform specific
		/// header file. If <see langword="null" />, the session will be unrestricted.
		/// </summary>
		public uint[] AllowedPlatformIds { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct SessionDetailsSettingsInternal : IGettable<SessionDetailsSettings>
	{
		private int m_ApiVersion;
		private IntPtr m_BucketId;
		private uint m_NumPublicConnections;
		private int m_AllowJoinInProgress;
		private OnlineSessionPermissionLevel m_PermissionLevel;
		private int m_InvitesAllowed;
		private int m_SanctionsEnabled;
		private IntPtr m_AllowedPlatformIds;
		private uint m_AllowedPlatformIdsCount;

		public void Get(out SessionDetailsSettings other)
		{
			other = default;
			
			Utf8String BucketIdPublic;
			Helper.Get(m_BucketId, out BucketIdPublic);
			other.BucketId = BucketIdPublic;
			other.NumPublicConnections = m_NumPublicConnections;
			bool AllowJoinInProgressPublic;
			Helper.Get(m_AllowJoinInProgress, out AllowJoinInProgressPublic);
			other.AllowJoinInProgress = AllowJoinInProgressPublic;
			other.PermissionLevel = m_PermissionLevel;
			bool InvitesAllowedPublic;
			Helper.Get(m_InvitesAllowed, out InvitesAllowedPublic);
			other.InvitesAllowed = InvitesAllowedPublic;
			bool SanctionsEnabledPublic;
			Helper.Get(m_SanctionsEnabled, out SanctionsEnabledPublic);
			other.SanctionsEnabled = SanctionsEnabledPublic;
			uint[] AllowedPlatformIdsPublic;
			Helper.Get(m_AllowedPlatformIds, out AllowedPlatformIdsPublic, m_AllowedPlatformIdsCount, false);
			other.AllowedPlatformIds = AllowedPlatformIdsPublic;
		}
	}
}
