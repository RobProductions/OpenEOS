// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Sessions
{

	/// <summary>
	/// Function prototype definition for notifications that comes from <see cref="SessionsInterface.AddNotifyLeaveSessionRequested" />.
	/// </summary>
	/// <param name="data">
	/// A <see cref="IntPtr" /> to <see cref="LeaveSessionRequestedCallbackInfo" /> containing the output information.
	/// </param>
	public delegate void OnLeaveSessionRequestedCallback(ref LeaveSessionRequestedCallbackInfo data);

	[UnmanagedFunctionPointer(Common.LIBRARY_CALLING_CONVENTION)]
	internal delegate void OnLeaveSessionRequestedCallbackInternal(ref LeaveSessionRequestedCallbackInfoInternal data);

	internal static class OnLeaveSessionRequestedCallbackInternalImplementation
	{
		private static OnLeaveSessionRequestedCallbackInternal s_Delegate;
		public static OnLeaveSessionRequestedCallbackInternal Delegate
		{
			get
			{
				if (s_Delegate == null)
				{
					s_Delegate = new OnLeaveSessionRequestedCallbackInternal(EntryPoint);
				}

				return s_Delegate;
			}
		}

		[MonoPInvokeCallback(typeof(OnLeaveSessionRequestedCallbackInternal))]
		public static void EntryPoint(ref LeaveSessionRequestedCallbackInfoInternal data)
		{
			OnLeaveSessionRequestedCallback callback;
			LeaveSessionRequestedCallbackInfo callbackInfo;
			if (Helper.TryGetCallback(ref data, out callback, out callbackInfo))
			{
				callback(ref callbackInfo);
			}
		}
	}
}
