// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Sessions
{
	/// <summary>
	/// Input parameters for the <see cref="SessionsInterface.UnregisterPlayers" /> function.
	/// </summary>
	public struct UnregisterPlayersOptions
	{
		/// <summary>
		/// Name of the session for which to unregister players
		/// </summary>
		public Utf8String SessionName { get; set; }

		/// <summary>
		/// Array of players to unregister from the session
		/// </summary>
		public ProductUserId[] PlayersToUnregister { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct UnregisterPlayersOptionsInternal : ISettable<UnregisterPlayersOptions>
	{
		private int m_ApiVersion;
		private IntPtr m_SessionName;
		private IntPtr m_PlayersToUnregister;
		private uint m_PlayersToUnregisterCount;

		public void Set(ref UnregisterPlayersOptions other)
		{
			Dispose();

			m_ApiVersion = SessionsInterface.UNREGISTERPLAYERS_API_LATEST;
			Helper.Set(other.SessionName, ref m_SessionName);
			Helper.Set(other.PlayersToUnregister, ref m_PlayersToUnregister, out m_PlayersToUnregisterCount, false);
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_SessionName);
			Helper.Dispose(ref m_PlayersToUnregister);
		}
	}
}
