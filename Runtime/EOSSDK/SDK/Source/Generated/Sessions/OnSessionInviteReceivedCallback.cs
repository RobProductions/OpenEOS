// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Sessions
{

	/// <summary>
	/// Function prototype definition for notifications that come from <see cref="SessionsInterface.AddNotifySessionInviteReceived" />
	/// </summary>
	/// <param name="data">
	/// A <see cref="SessionInviteReceivedCallbackInfo" /> containing the output information and result
	/// </param>
	public delegate void OnSessionInviteReceivedCallback(ref SessionInviteReceivedCallbackInfo data);

	[UnmanagedFunctionPointer(Common.LIBRARY_CALLING_CONVENTION)]
	internal delegate void OnSessionInviteReceivedCallbackInternal(ref SessionInviteReceivedCallbackInfoInternal data);

	internal static class OnSessionInviteReceivedCallbackInternalImplementation
	{
		private static OnSessionInviteReceivedCallbackInternal s_Delegate;
		public static OnSessionInviteReceivedCallbackInternal Delegate
		{
			get
			{
				if (s_Delegate == null)
				{
					s_Delegate = new OnSessionInviteReceivedCallbackInternal(EntryPoint);
				}

				return s_Delegate;
			}
		}

		[MonoPInvokeCallback(typeof(OnSessionInviteReceivedCallbackInternal))]
		public static void EntryPoint(ref SessionInviteReceivedCallbackInfoInternal data)
		{
			OnSessionInviteReceivedCallback callback;
			SessionInviteReceivedCallbackInfo callbackInfo;
			if (Helper.TryGetCallback(ref data, out callback, out callbackInfo))
			{
				callback(ref callbackInfo);
			}
		}
	}
}
