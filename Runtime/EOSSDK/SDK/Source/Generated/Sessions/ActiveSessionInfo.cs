// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Sessions
{
	/// <summary>
	/// Top level details about an active session
	/// </summary>
	public struct ActiveSessionInfo
	{
		/// <summary>
		/// Name of the session
		/// </summary>
		public Utf8String SessionName { get; set; }

		/// <summary>
		/// The Product User ID of the local user who created or joined the session
		/// </summary>
		public ProductUserId LocalUserId { get; set; }

		/// <summary>
		/// Current state of the session
		/// </summary>
		public OnlineSessionState State { get; set; }

		/// <summary>
		/// Session details
		/// </summary>
		public SessionDetailsInfo? SessionDetails { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct ActiveSessionInfoInternal : IGettable<ActiveSessionInfo>
	{
		private int m_ApiVersion;
		private IntPtr m_SessionName;
		private IntPtr m_LocalUserId;
		private OnlineSessionState m_State;
		private IntPtr m_SessionDetails;

		public void Get(out ActiveSessionInfo other)
		{
			other = default;
			
			Utf8String SessionNamePublic;
			Helper.Get(m_SessionName, out SessionNamePublic);
			other.SessionName = SessionNamePublic;
			ProductUserId LocalUserIdPublic;
			Helper.Get(m_LocalUserId, out LocalUserIdPublic);
			other.LocalUserId = LocalUserIdPublic;
			other.State = m_State;
			SessionDetailsInfo? SessionDetailsPublic;
			Helper.Get<SessionDetailsInfoInternal, SessionDetailsInfo>(m_SessionDetails, out SessionDetailsPublic);
			other.SessionDetails = SessionDetailsPublic;
		}
	}
}
