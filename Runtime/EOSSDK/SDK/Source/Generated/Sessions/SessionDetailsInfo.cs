// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Sessions
{
	/// <summary>
	/// Internal details about a session, found on both active sessions and within search results
	/// </summary>
	public struct SessionDetailsInfo
	{
		/// <summary>
		/// Session ID assigned by the backend service
		/// </summary>
		public Utf8String SessionId { get; set; }

		/// <summary>
		/// IP address of this session as visible by the backend service
		/// </summary>
		public Utf8String HostAddress { get; set; }

		/// <summary>
		/// Number of remaining open spaces on the session (NumPublicConnections - RegisteredPlayers
		/// </summary>
		public uint NumOpenPublicConnections { get; set; }

		/// <summary>
		/// Reference to the additional settings associated with this session
		/// </summary>
		public SessionDetailsSettings? Settings { get; set; }

		/// <summary>
		/// The Product User ID of the session owner. Null if the session is not owned by a user.
		/// </summary>
		public ProductUserId OwnerUserId { get; set; }

		/// <summary>
		/// The client id of the session owner. Null if the session is not owned by a server. The session is owned by a server if <see cref="Platform.Options.IsServer" /> is <see langword="true" />.
		/// </summary>
		public Utf8String OwnerServerClientId { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct SessionDetailsInfoInternal : IGettable<SessionDetailsInfo>
	{
		private int m_ApiVersion;
		private IntPtr m_SessionId;
		private IntPtr m_HostAddress;
		private uint m_NumOpenPublicConnections;
		private IntPtr m_Settings;
		private IntPtr m_OwnerUserId;
		private IntPtr m_OwnerServerClientId;

		public void Get(out SessionDetailsInfo other)
		{
			other = default;
			
			Utf8String SessionIdPublic;
			Helper.Get(m_SessionId, out SessionIdPublic);
			other.SessionId = SessionIdPublic;
			Utf8String HostAddressPublic;
			Helper.Get(m_HostAddress, out HostAddressPublic);
			other.HostAddress = HostAddressPublic;
			other.NumOpenPublicConnections = m_NumOpenPublicConnections;
			SessionDetailsSettings? SettingsPublic;
			Helper.Get<SessionDetailsSettingsInternal, SessionDetailsSettings>(m_Settings, out SettingsPublic);
			other.Settings = SettingsPublic;
			ProductUserId OwnerUserIdPublic;
			Helper.Get(m_OwnerUserId, out OwnerUserIdPublic);
			other.OwnerUserId = OwnerUserIdPublic;
			Utf8String OwnerServerClientIdPublic;
			Helper.Get(m_OwnerServerClientId, out OwnerServerClientIdPublic);
			other.OwnerServerClientId = OwnerServerClientIdPublic;
		}
	}
}
