// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.AntiCheatServer
{
	public struct SetClientNetworkStateOptions
	{
		/// <summary>
		/// Locally unique value describing the remote user (e.g. a player object <see cref="IntPtr" />)
		/// </summary>
		public IntPtr ClientHandle { get; set; }

		/// <summary>
		/// True if the network is functioning normally, <see langword="false" /> if temporarily interrupted
		/// </summary>
		public bool IsNetworkActive { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct SetClientNetworkStateOptionsInternal : ISettable<SetClientNetworkStateOptions>
	{
		private int m_ApiVersion;
		private IntPtr m_ClientHandle;
		private int m_IsNetworkActive;

		public void Set(ref SetClientNetworkStateOptions other)
		{
			Dispose();

			m_ApiVersion = AntiCheatServerInterface.SETCLIENTNETWORKSTATE_API_LATEST;
			m_ClientHandle = other.ClientHandle;
			Helper.Set(other.IsNetworkActive, ref m_IsNetworkActive);
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_ClientHandle);
		}
	}
}
