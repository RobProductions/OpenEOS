// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Logging
{
	/// <summary>
	/// A structure representing a log message
	/// </summary>
	public struct LogMessage
	{
		/// <summary>
		/// A <see cref="Utf8String" /> representation of the log message category, encoded in UTF-8. Only valid during the life of the callback, so copy the <see cref="Utf8String" /> if you need it later.
		/// </summary>
		public Utf8String Category { get; set; }

		/// <summary>
		/// The log message, encoded in UTF-8. Only valid during the life of the callback, so copy the <see cref="Utf8String" /> if you need it later.
		/// </summary>
		public Utf8String Message { get; set; }

		/// <summary>
		/// The log level associated with the message
		/// </summary>
		public LogLevel Level { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct LogMessageInternal : IGettable<LogMessage>
	{
		private IntPtr m_Category;
		private IntPtr m_Message;
		private LogLevel m_Level;

		public void Get(out LogMessage other)
		{
			other = default;
			
			Utf8String CategoryPublic;
			Helper.Get(m_Category, out CategoryPublic);
			other.Category = CategoryPublic;
			Utf8String MessagePublic;
			Helper.Get(m_Message, out MessagePublic);
			other.Message = MessagePublic;
			other.Level = m_Level;
		}
	}
}
