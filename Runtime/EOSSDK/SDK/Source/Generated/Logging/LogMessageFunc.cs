// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Logging
{

	/// <summary>
	/// Function prototype definition for functions that receive log messages.
	/// <see cref="LogMessage" />
	/// </summary>
	/// <param name="message">
	/// A <see cref="LogMessage" /> containing the log category, log level, and message.
	/// </param>
	public delegate void LogMessageFunc(ref LogMessage message);

	[UnmanagedFunctionPointer(Common.LIBRARY_CALLING_CONVENTION)]
	internal delegate void LogMessageFuncInternal(ref LogMessageInternal message);

	internal static class LogMessageFuncInternalImplementation
	{
		private static LogMessageFuncInternal s_Delegate;
		public static LogMessageFuncInternal Delegate
		{
			get
			{
				if (s_Delegate == null)
				{
					s_Delegate = new LogMessageFuncInternal(EntryPoint);
				}

				return s_Delegate;
			}
		}

		[MonoPInvokeCallback(typeof(LogMessageFuncInternal))]
		public static void EntryPoint(ref LogMessageInternal message)
		{
			LogMessageFunc callback;
			if (Helper.TryGetStaticCallback("Logging.LogMessageFunc", out callback))
			{
				LogMessage messagePublic;
				Helper.Get(ref message, out messagePublic);

				callback(ref messagePublic);
			}
		}
	}
}
