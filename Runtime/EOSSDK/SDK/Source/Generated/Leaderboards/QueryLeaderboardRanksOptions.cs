// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Leaderboards
{
	/// <summary>
	/// Input parameters for the <see cref="LeaderboardsInterface.QueryLeaderboardRanks" /> function.
	/// <see cref="Definition" />
	/// </summary>
	public struct QueryLeaderboardRanksOptions
	{
		/// <summary>
		/// The ID of the leaderboard whose information you want to retrieve.
		/// </summary>
		public Utf8String LeaderboardId { get; set; }

		/// <summary>
		/// Product User ID for user who is querying ranks.
		/// Must be set when using a client policy that requires a valid logged in user.
		/// Not used for Dedicated Server where no user is available.
		/// </summary>
		public ProductUserId LocalUserId { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct QueryLeaderboardRanksOptionsInternal : ISettable<QueryLeaderboardRanksOptions>
	{
		private int m_ApiVersion;
		private IntPtr m_LeaderboardId;
		private IntPtr m_LocalUserId;

		public void Set(ref QueryLeaderboardRanksOptions other)
		{
			Dispose();

			m_ApiVersion = LeaderboardsInterface.QUERYLEADERBOARDRANKS_API_LATEST;
			Helper.Set(other.LeaderboardId, ref m_LeaderboardId);
			Helper.Set(other.LocalUserId, ref m_LocalUserId);
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_LeaderboardId);
			Helper.Dispose(ref m_LocalUserId);
		}
	}
}
