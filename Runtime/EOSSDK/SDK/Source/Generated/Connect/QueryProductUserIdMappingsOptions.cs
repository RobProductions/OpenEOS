// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Connect
{
	/// <summary>
	/// Input parameters for the <see cref="ConnectInterface.QueryProductUserIdMappings" /> function.
	/// </summary>
	public struct QueryProductUserIdMappingsOptions
	{
		/// <summary>
		/// Game Clients set this field to the Product User ID of the local authenticated user querying account mappings.
		/// Game Servers set this field to <see langword="null" />. Usage is allowed given that the configured client policy for server credentials permit it.
		/// </summary>
		public ProductUserId LocalUserId { get; set; }

		/// <summary>
		/// Deprecated - all external mappings are included in this call, it is no longer necessary to specify this value.
		/// </summary>
		public ExternalAccountType AccountIdType_DEPRECATED { get; set; }

		/// <summary>
		/// An array of Product User IDs to query for the given external account representation.
		/// </summary>
		public ProductUserId[] ProductUserIds { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct QueryProductUserIdMappingsOptionsInternal : ISettable<QueryProductUserIdMappingsOptions>
	{
		private int m_ApiVersion;
		private IntPtr m_LocalUserId;
		private ExternalAccountType m_AccountIdType_DEPRECATED;
		private IntPtr m_ProductUserIds;
		private uint m_ProductUserIdCount;

		public void Set(ref QueryProductUserIdMappingsOptions other)
		{
			Dispose();

			m_ApiVersion = ConnectInterface.QUERYPRODUCTUSERIDMAPPINGS_API_LATEST;
			Helper.Set(other.LocalUserId, ref m_LocalUserId);
			m_AccountIdType_DEPRECATED = other.AccountIdType_DEPRECATED;
			Helper.Set(other.ProductUserIds, ref m_ProductUserIds, out m_ProductUserIdCount, false);
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_LocalUserId);
			Helper.Dispose(ref m_ProductUserIds);
		}
	}
}
