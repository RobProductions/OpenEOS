// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Connect
{
	/// <summary>
	/// Additional information about the local user.
	/// </summary>
	public struct UserLoginInfo
	{
		/// <summary>
		/// The user's display name on the identity provider systems as UTF-8 encoded <see langword="null" />-terminated <see cref="Utf8String" />.
		/// The length of the name can be at maximum up to <see cref="ConnectInterface.USERLOGININFO_DISPLAYNAME_MAX_LENGTH" /> bytes.
		/// 
		/// As the display name passed here is client-controlled and not part of user authentication tokens,
		/// it is only treated as non-authoritative informational data to be used by some of the feature services.
		/// For example displaying player names in Leaderboards rankings.
		/// </summary>
		public Utf8String DisplayName { get; set; }

		/// <summary>
		/// Nintendo Service Account ID Token (NSA ID).
		/// 
		/// This field is required to be set and only used when running on the Nintendo Switch device,
		/// and the user is being authenticated using any other credential type than <see cref="ExternalCredentialType.NintendoNsaIdToken" />.
		/// 
		/// In order to use the Lobbies and Sessions interfaces, a valid NSA ID Token is required to be provided
		/// for the active local Nintendo Switch user. Otherwise, attempting to use either of the Lobbies or
		/// Sessions interfaces will return the <see cref="Result.PermissionOnlinePlayRestricted" /> error result.
		/// </summary>
		public Utf8String NsaIdToken { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct UserLoginInfoInternal : ISettable<UserLoginInfo>
	{
		private int m_ApiVersion;
		private IntPtr m_DisplayName;
		private IntPtr m_NsaIdToken;

		public void Set(ref UserLoginInfo other)
		{
			Dispose();

			m_ApiVersion = ConnectInterface.USERLOGININFO_API_LATEST;
			Helper.Set(other.DisplayName, ref m_DisplayName);
			Helper.Set(other.NsaIdToken, ref m_NsaIdToken);
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_DisplayName);
			Helper.Dispose(ref m_NsaIdToken);
		}
	}
}
