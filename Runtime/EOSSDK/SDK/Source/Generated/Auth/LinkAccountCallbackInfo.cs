// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Auth
{
	/// <summary>
	/// Output parameters for the <see cref="AuthInterface.LinkAccount" /> Function.
	/// </summary>
	public struct LinkAccountCallbackInfo : ICallbackInfo
	{
		/// <summary>
		/// The <see cref="Result" /> code for the operation. <see cref="Result.Success" /> indicates that the operation succeeded; other codes indicate errors.
		/// </summary>
		public Result ResultCode { get; set; }

		/// <summary>
		/// Context that was passed into <see cref="AuthInterface.LinkAccount" />.
		/// </summary>
		public object ClientData { get; set; }

		/// <summary>
		/// The Epic Account ID of the local user whose account has been linked during login.
		/// </summary>
		public EpicAccountId LocalUserId { get; set; }

		/// <summary>
		/// Optional data that may be returned in the middle of the login flow, when neither the in-game overlay or a platform browser is used.
		/// This data is present when the ResultCode is <see cref="Result.AuthPinGrantCode" />.
		/// </summary>
		public PinGrantInfo? PinGrantInfo { get; set; }

		/// <summary>
		/// The Epic Account ID that has been previously selected to be used for the current application.
		/// Applications should use this ID to authenticate with online backend services that store game-scoped data for users.
		/// 
		/// Note: This ID may be different from LocalUserId if the user has previously merged Epic accounts into the account
		/// represented by LocalUserId, and one of the accounts that got merged had game data associated with it for the application.
		/// </summary>
		public EpicAccountId SelectedAccountId { get; set; }

		public object GetClientData()
		{
			return ClientData;
		}

		public Result? GetResultCode()
		{
			return ResultCode;
		}
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct LinkAccountCallbackInfoInternal : ICallbackInfoInternal, IGettable<LinkAccountCallbackInfo>
	{
		private Result m_ResultCode;
		private IntPtr m_ClientData;
		private IntPtr m_LocalUserId;
		private IntPtr m_PinGrantInfo;
		private IntPtr m_SelectedAccountId;

		public IntPtr ClientDataPointer
		{
			get
			{
				return m_ClientData;
			}
		}

		public void Get(out LinkAccountCallbackInfo other)
		{
			other = default;
			
			other.ResultCode = m_ResultCode;
			object ClientDataPublic;
			Helper.Get(m_ClientData, out ClientDataPublic);
			other.ClientData = ClientDataPublic;
			EpicAccountId LocalUserIdPublic;
			Helper.Get(m_LocalUserId, out LocalUserIdPublic);
			other.LocalUserId = LocalUserIdPublic;
			PinGrantInfo? PinGrantInfoPublic;
			Helper.Get<PinGrantInfoInternal, PinGrantInfo>(m_PinGrantInfo, out PinGrantInfoPublic);
			other.PinGrantInfo = PinGrantInfoPublic;
			EpicAccountId SelectedAccountIdPublic;
			Helper.Get(m_SelectedAccountId, out SelectedAccountIdPublic);
			other.SelectedAccountId = SelectedAccountIdPublic;
		}
	}
}
