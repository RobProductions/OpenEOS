// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.RTCAudio
{
	/// <summary>
	/// This struct is used to get information about a specific output device.
	/// </summary>
	public struct AudioOutputDeviceInfo
	{
		/// <summary>
		/// True if this is the default audio output device in the system.
		/// </summary>
		public bool DefaultDevice { get; set; }

		/// <summary>
		/// The persistent unique id of the device.
		/// The value can be cached - invalidated only when the audio device pool is changed.
		/// <see cref="RTCAudioInterface.AddNotifyAudioDevicesChanged" />
		/// </summary>
		public Utf8String DeviceId { get; set; }

		/// <summary>
		/// The human readable name of the device
		/// </summary>
		public Utf8String DeviceName { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct AudioOutputDeviceInfoInternal : IGettable<AudioOutputDeviceInfo>
	{
		private int m_ApiVersion;
		private int m_DefaultDevice;
		private IntPtr m_DeviceId;
		private IntPtr m_DeviceName;

		public void Get(out AudioOutputDeviceInfo other)
		{
			other = default;
			
			bool DefaultDevicePublic;
			Helper.Get(m_DefaultDevice, out DefaultDevicePublic);
			other.DefaultDevice = DefaultDevicePublic;
			Utf8String DeviceIdPublic;
			Helper.Get(m_DeviceId, out DeviceIdPublic);
			other.DeviceId = DeviceIdPublic;
			Utf8String DeviceNamePublic;
			Helper.Get(m_DeviceName, out DeviceNamePublic);
			other.DeviceName = DeviceNamePublic;
		}
	}
}
