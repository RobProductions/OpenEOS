// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.RTCAudio
{
	/// <summary>
	/// This struct is used to call <see cref="RTCAudioInterface.SetInputDeviceSettings" />.
	/// </summary>
	public struct SetInputDeviceSettingsOptions
	{
		/// <summary>
		/// The Product User ID of the user trying to request this operation.
		/// </summary>
		public ProductUserId LocalUserId { get; set; }

		/// <summary>
		/// The device Id to be used for this user. Pass <see langword="null" /> or empty <see cref="Utf8String" /> to use a default input device.
		/// 
		/// If the device ID is invalid, the default device will be used instead.
		/// Despite this fact, that device ID will be stored and the library will try to move on it when an audio device pool is being changed.
		/// 
		/// The actual hardware audio input device usage depends on the current payload and optimized not to use it
		/// when generated audio frames cannot be processed by someone else based on a scope of rules (For instance, when a client is alone in a room).
		/// <see cref="RTCAudioInterface.AddNotifyAudioDevicesChanged" />
		/// </summary>
		public Utf8String RealDeviceId { get; set; }

		/// <summary>
		/// Enable or disable Platform AEC (Acoustic Echo Cancellation) if available.
		/// </summary>
		public bool PlatformAEC { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct SetInputDeviceSettingsOptionsInternal : ISettable<SetInputDeviceSettingsOptions>
	{
		private int m_ApiVersion;
		private IntPtr m_LocalUserId;
		private IntPtr m_RealDeviceId;
		private int m_PlatformAEC;

		public void Set(ref SetInputDeviceSettingsOptions other)
		{
			Dispose();

			m_ApiVersion = RTCAudioInterface.SETINPUTDEVICESETTINGS_API_LATEST;
			Helper.Set(other.LocalUserId, ref m_LocalUserId);
			Helper.Set(other.RealDeviceId, ref m_RealDeviceId);
			Helper.Set(other.PlatformAEC, ref m_PlatformAEC);
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_LocalUserId);
			Helper.Dispose(ref m_RealDeviceId);
		}
	}
}
