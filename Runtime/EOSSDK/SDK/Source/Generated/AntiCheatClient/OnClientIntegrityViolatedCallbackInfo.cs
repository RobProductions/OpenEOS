// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.AntiCheatClient
{
	/// <summary>
	/// Structure containing details about integrity violation related to the local client
	/// </summary>
	public struct OnClientIntegrityViolatedCallbackInfo : ICallbackInfo
	{
		/// <summary>
		/// Caller-specified context data
		/// </summary>
		public object ClientData { get; set; }

		/// <summary>
		/// Code describing the violation that occurred
		/// </summary>
		public AntiCheatClientViolationType ViolationType { get; set; }

		/// <summary>
		/// <see cref="Utf8String" /> describing the violation which should be displayed to the user
		/// </summary>
		public Utf8String ViolationMessage { get; set; }

		public object GetClientData()
		{
			return ClientData;
		}

		public Result? GetResultCode()
		{
			return null;
		}
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct OnClientIntegrityViolatedCallbackInfoInternal : ICallbackInfoInternal, IGettable<OnClientIntegrityViolatedCallbackInfo>
	{
		private IntPtr m_ClientData;
		private AntiCheatClientViolationType m_ViolationType;
		private IntPtr m_ViolationMessage;

		public IntPtr ClientDataPointer
		{
			get
			{
				return m_ClientData;
			}
		}

		public void Get(out OnClientIntegrityViolatedCallbackInfo other)
		{
			other = default;
			
			object ClientDataPublic;
			Helper.Get(m_ClientData, out ClientDataPublic);
			other.ClientData = ClientDataPublic;
			other.ViolationType = m_ViolationType;
			Utf8String ViolationMessagePublic;
			Helper.Get(m_ViolationMessage, out ViolationMessagePublic);
			other.ViolationMessage = ViolationMessagePublic;
		}
	}
}
