// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.AntiCheatClient
{
	/// <summary>
	/// Structure containing details about a new message that must be dispatched to the game server.
	/// </summary>
	public struct OnMessageToServerCallbackInfo : ICallbackInfo
	{
		/// <summary>
		/// Caller-specified context data
		/// </summary>
		public object ClientData { get; set; }

		/// <summary>
		/// The message data that must be sent to the server
		/// </summary>
		public ArraySegment<byte> MessageData { get; set; }

		public object GetClientData()
		{
			return ClientData;
		}

		public Result? GetResultCode()
		{
			return null;
		}
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct OnMessageToServerCallbackInfoInternal : ICallbackInfoInternal, IGettable<OnMessageToServerCallbackInfo>
	{
		private IntPtr m_ClientData;
		private IntPtr m_MessageData;
		private uint m_MessageDataSizeBytes;

		public IntPtr ClientDataPointer
		{
			get
			{
				return m_ClientData;
			}
		}

		public void Get(out OnMessageToServerCallbackInfo other)
		{
			other = default;
			
			object ClientDataPublic;
			Helper.Get(m_ClientData, out ClientDataPublic);
			other.ClientData = ClientDataPublic;
			ArraySegment<byte> MessageDataPublic;
			Helper.Get(m_MessageData, out MessageDataPublic, m_MessageDataSizeBytes);
			other.MessageData = MessageDataPublic;
		}
	}
}
