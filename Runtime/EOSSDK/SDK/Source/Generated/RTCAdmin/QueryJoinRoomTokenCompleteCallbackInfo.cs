// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.RTCAdmin
{
	/// <summary>
	/// Data containing the result information for a query join room token request.
	/// </summary>
	public struct QueryJoinRoomTokenCompleteCallbackInfo : ICallbackInfo
	{
		/// <summary>
		/// The <see cref="Result" /> code for the operation. <see cref="Result.Success" /> indicates that the operation succeeded; other codes indicate errors.
		/// </summary>
		public Result ResultCode { get; set; }

		/// <summary>
		/// Context that was passed into <see cref="RTCAdminInterface.QueryJoinRoomToken" />.
		/// </summary>
		public object ClientData { get; set; }

		/// <summary>
		/// Room the request was made for.
		/// </summary>
		public Utf8String RoomName { get; set; }

		/// <summary>
		/// URL passed to backend to join room.
		/// </summary>
		public Utf8String ClientBaseUrl { get; set; }

		/// <summary>
		/// If the query completed successfully, this contains an identifier that should be used to retrieve the tokens.
		/// This identifier is only valid for the duration of the callback.
		/// <see cref="RTCAdminInterface.CopyUserTokenByIndex" />
		/// <see cref="RTCAdminInterface.CopyUserTokenByUserId" />
		/// </summary>
		public uint QueryId { get; set; }

		/// <summary>
		/// How many token received as result of the query
		/// </summary>
		public uint TokenCount { get; set; }

		public object GetClientData()
		{
			return ClientData;
		}

		public Result? GetResultCode()
		{
			return ResultCode;
		}
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct QueryJoinRoomTokenCompleteCallbackInfoInternal : ICallbackInfoInternal, IGettable<QueryJoinRoomTokenCompleteCallbackInfo>
	{
		private Result m_ResultCode;
		private IntPtr m_ClientData;
		private IntPtr m_RoomName;
		private IntPtr m_ClientBaseUrl;
		private uint m_QueryId;
		private uint m_TokenCount;

		public IntPtr ClientDataPointer
		{
			get
			{
				return m_ClientData;
			}
		}

		public void Get(out QueryJoinRoomTokenCompleteCallbackInfo other)
		{
			other = default;
			
			other.ResultCode = m_ResultCode;
			object ClientDataPublic;
			Helper.Get(m_ClientData, out ClientDataPublic);
			other.ClientData = ClientDataPublic;
			Utf8String RoomNamePublic;
			Helper.Get(m_RoomName, out RoomNamePublic);
			other.RoomName = RoomNamePublic;
			Utf8String ClientBaseUrlPublic;
			Helper.Get(m_ClientBaseUrl, out ClientBaseUrlPublic);
			other.ClientBaseUrl = ClientBaseUrlPublic;
			other.QueryId = m_QueryId;
			other.TokenCount = m_TokenCount;
		}
	}
}
