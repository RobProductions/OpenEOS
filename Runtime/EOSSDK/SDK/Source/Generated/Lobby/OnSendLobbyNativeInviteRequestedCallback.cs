// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Lobby
{

	/// <summary>
	/// Function prototype definition for notifications that comes from <see cref="LobbyInterface.AddNotifySendLobbyNativeInviteRequested" />
	/// After processing the callback <see cref="UI.UIInterface.AcknowledgeEventId" /> must be called.
	/// <see cref="UI.UIInterface.AcknowledgeEventId" />
	/// </summary>
	/// <param name="data">
	/// A <see cref="SendLobbyNativeInviteRequestedCallbackInfo" /> containing the output information and result
	/// </param>
	public delegate void OnSendLobbyNativeInviteRequestedCallback(ref SendLobbyNativeInviteRequestedCallbackInfo data);

	[UnmanagedFunctionPointer(Common.LIBRARY_CALLING_CONVENTION)]
	internal delegate void OnSendLobbyNativeInviteRequestedCallbackInternal(ref SendLobbyNativeInviteRequestedCallbackInfoInternal data);

	internal static class OnSendLobbyNativeInviteRequestedCallbackInternalImplementation
	{
		private static OnSendLobbyNativeInviteRequestedCallbackInternal s_Delegate;
		public static OnSendLobbyNativeInviteRequestedCallbackInternal Delegate
		{
			get
			{
				if (s_Delegate == null)
				{
					s_Delegate = new OnSendLobbyNativeInviteRequestedCallbackInternal(EntryPoint);
				}

				return s_Delegate;
			}
		}

		[MonoPInvokeCallback(typeof(OnSendLobbyNativeInviteRequestedCallbackInternal))]
		public static void EntryPoint(ref SendLobbyNativeInviteRequestedCallbackInfoInternal data)
		{
			OnSendLobbyNativeInviteRequestedCallback callback;
			SendLobbyNativeInviteRequestedCallbackInfo callbackInfo;
			if (Helper.TryGetCallback(ref data, out callback, out callbackInfo))
			{
				callback(ref callbackInfo);
			}
		}
	}
}
