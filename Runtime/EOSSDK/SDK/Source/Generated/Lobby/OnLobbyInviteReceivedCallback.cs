// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Lobby
{

	/// <summary>
	/// Function prototype definition for notifications that comes from <see cref="LobbyInterface.AddNotifyLobbyInviteReceived" />
	/// </summary>
	/// <param name="data">
	/// A <see cref="LobbyInviteReceivedCallbackInfo" /> containing the output information and result
	/// </param>
	public delegate void OnLobbyInviteReceivedCallback(ref LobbyInviteReceivedCallbackInfo data);

	[UnmanagedFunctionPointer(Common.LIBRARY_CALLING_CONVENTION)]
	internal delegate void OnLobbyInviteReceivedCallbackInternal(ref LobbyInviteReceivedCallbackInfoInternal data);

	internal static class OnLobbyInviteReceivedCallbackInternalImplementation
	{
		private static OnLobbyInviteReceivedCallbackInternal s_Delegate;
		public static OnLobbyInviteReceivedCallbackInternal Delegate
		{
			get
			{
				if (s_Delegate == null)
				{
					s_Delegate = new OnLobbyInviteReceivedCallbackInternal(EntryPoint);
				}

				return s_Delegate;
			}
		}

		[MonoPInvokeCallback(typeof(OnLobbyInviteReceivedCallbackInternal))]
		public static void EntryPoint(ref LobbyInviteReceivedCallbackInfoInternal data)
		{
			OnLobbyInviteReceivedCallback callback;
			LobbyInviteReceivedCallbackInfo callbackInfo;
			if (Helper.TryGetCallback(ref data, out callback, out callbackInfo))
			{
				callback(ref callbackInfo);
			}
		}
	}
}
