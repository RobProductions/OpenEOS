// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Lobby
{
	/// <summary>
	/// Input parameters for the <see cref="LobbyInterface.AddNotifyRTCRoomConnectionChanged" /> function.
	/// </summary>
	public struct AddNotifyRTCRoomConnectionChangedOptions
	{
		/// <summary>
		/// The ID of the lobby to receive RTC Room connection change notifications for
		/// This is deprecated and no longer needed. The notification is raised for any LobbyId or LocalUserId. If any filtering is required, the callback struct (<see cref="RTCRoomConnectionChangedCallbackInfo" />) has both a LobbyId and LocalUserId field.
		/// </summary>
		public Utf8String LobbyId_DEPRECATED { get; set; }

		/// <summary>
		/// The Product User ID of the local user in the lobby
		/// This is deprecated and no longer needed. The notification is raised for any LobbyId or LocalUserId. If any filtering is required, the callback struct (<see cref="RTCRoomConnectionChangedCallbackInfo" />) has both a LobbyId and LocalUserId field.
		/// </summary>
		public ProductUserId LocalUserId_DEPRECATED { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct AddNotifyRTCRoomConnectionChangedOptionsInternal : ISettable<AddNotifyRTCRoomConnectionChangedOptions>
	{
		private int m_ApiVersion;
		private IntPtr m_LobbyId_DEPRECATED;
		private IntPtr m_LocalUserId_DEPRECATED;

		public void Set(ref AddNotifyRTCRoomConnectionChangedOptions other)
		{
			Dispose();

			m_ApiVersion = LobbyInterface.ADDNOTIFYRTCROOMCONNECTIONCHANGED_API_LATEST;
			Helper.Set(other.LobbyId_DEPRECATED, ref m_LobbyId_DEPRECATED);
			Helper.Set(other.LocalUserId_DEPRECATED, ref m_LocalUserId_DEPRECATED);
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_LobbyId_DEPRECATED);
			Helper.Dispose(ref m_LocalUserId_DEPRECATED);
		}
	}
}
