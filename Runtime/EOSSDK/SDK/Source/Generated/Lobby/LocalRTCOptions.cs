// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Lobby
{
	/// <summary>
	/// Input parameters to use with Lobby RTC Rooms.
	/// </summary>
	public struct LocalRTCOptions
	{
		/// <summary>
		/// Flags for the local user in this room. The default is 0 if this struct is not specified. @see <see cref="RTC.JoinRoomOptions.Flags" />
		/// </summary>
		public uint Flags { get; set; }

		/// <summary>
		/// Set to <see langword="true" /> to enable Manual Audio Input. If manual audio input is enabled, audio recording is not started and the audio buffers
		/// must be passed manually using <see cref="RTCAudio.RTCAudioInterface.SendAudio" />. The default is <see langword="false" /> if this struct is not specified.
		/// </summary>
		public bool UseManualAudioInput { get; set; }

		/// <summary>
		/// Set to <see langword="true" /> to enable Manual Audio Output. If manual audio output is enabled, audio rendering is not started and the audio buffers
		/// must be received with <see cref="RTCAudio.RTCAudioInterface.AddNotifyAudioBeforeRender" /> and rendered manually. The default is <see langword="false" /> if this struct is not
		/// specified.
		/// </summary>
		public bool UseManualAudioOutput { get; set; }

		/// <summary>
		/// Set to <see langword="true" /> to start the audio input device's stream as muted when first connecting to the RTC room.
		/// 
		/// It must be manually unmuted with a call to <see cref="RTCAudio.RTCAudioInterface.UpdateSending" />. If manual audio output is enabled, this value is ignored.
		/// The default value is <see langword="false" /> if this struct is not specified.
		/// </summary>
		public bool LocalAudioDeviceInputStartsMuted { get; set; }

		/// <summary>
		/// Reserved field, should be <see langword="null" /> by default
		/// </summary>
		public IntPtr Reserved { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct LocalRTCOptionsInternal : ISettable<LocalRTCOptions>
	{
		private int m_ApiVersion;
		private uint m_Flags;
		private int m_UseManualAudioInput;
		private int m_UseManualAudioOutput;
		private int m_LocalAudioDeviceInputStartsMuted;
		private IntPtr m_Reserved;

		public void Set(ref LocalRTCOptions other)
		{
			Dispose();

			m_ApiVersion = LobbyInterface.LOCALRTCOPTIONS_API_LATEST;
			m_Flags = other.Flags;
			Helper.Set(other.UseManualAudioInput, ref m_UseManualAudioInput);
			Helper.Set(other.UseManualAudioOutput, ref m_UseManualAudioOutput);
			Helper.Set(other.LocalAudioDeviceInputStartsMuted, ref m_LocalAudioDeviceInputStartsMuted);
			m_Reserved = other.Reserved;
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_Reserved);
		}
	}
}
