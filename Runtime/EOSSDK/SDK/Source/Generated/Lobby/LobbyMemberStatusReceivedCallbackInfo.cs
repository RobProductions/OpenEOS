// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Lobby
{
	/// <summary>
	/// Output parameters for the <see cref="LobbyInterface.AddNotifyLobbyMemberStatusReceived" /> function.
	/// </summary>
	public struct LobbyMemberStatusReceivedCallbackInfo : ICallbackInfo
	{
		/// <summary>
		/// Context that was passed into <see cref="LobbyInterface.AddNotifyLobbyMemberStatusReceived" />
		/// </summary>
		public object ClientData { get; set; }

		/// <summary>
		/// The ID of the lobby
		/// </summary>
		public Utf8String LobbyId { get; set; }

		/// <summary>
		/// The Product User ID of the lobby member
		/// </summary>
		public ProductUserId TargetUserId { get; set; }

		/// <summary>
		/// Latest status of the user
		/// </summary>
		public LobbyMemberStatus CurrentStatus { get; set; }

		public object GetClientData()
		{
			return ClientData;
		}

		public Result? GetResultCode()
		{
			return null;
		}
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct LobbyMemberStatusReceivedCallbackInfoInternal : ICallbackInfoInternal, IGettable<LobbyMemberStatusReceivedCallbackInfo>
	{
		private IntPtr m_ClientData;
		private IntPtr m_LobbyId;
		private IntPtr m_TargetUserId;
		private LobbyMemberStatus m_CurrentStatus;

		public IntPtr ClientDataPointer
		{
			get
			{
				return m_ClientData;
			}
		}

		public void Get(out LobbyMemberStatusReceivedCallbackInfo other)
		{
			other = default;
			
			object ClientDataPublic;
			Helper.Get(m_ClientData, out ClientDataPublic);
			other.ClientData = ClientDataPublic;
			Utf8String LobbyIdPublic;
			Helper.Get(m_LobbyId, out LobbyIdPublic);
			other.LobbyId = LobbyIdPublic;
			ProductUserId TargetUserIdPublic;
			Helper.Get(m_TargetUserId, out TargetUserIdPublic);
			other.TargetUserId = TargetUserIdPublic;
			other.CurrentStatus = m_CurrentStatus;
		}
	}
}
