// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.UI
{
	/// <summary>
	/// A structure representing a memory monitoring message.
	/// </summary>
	public struct MemoryMonitorCallbackInfo : ICallbackInfo
	{
		/// <summary>
		/// Context that was passed into <see cref="UIInterface.AddNotifyMemoryMonitor" />
		/// </summary>
		public object ClientData { get; set; }

		/// <summary>
		/// This field is for system specific memory monitor report.
		/// 
		/// If provided then the structure will be located in eos_<platform>_ui.h
		/// The structure will be named EOS_<platform>_MemoryMonitorReport.
		/// </summary>
		public IntPtr SystemMemoryMonitorReport { get; set; }

		public object GetClientData()
		{
			return ClientData;
		}

		public Result? GetResultCode()
		{
			return null;
		}
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct MemoryMonitorCallbackInfoInternal : ICallbackInfoInternal, IGettable<MemoryMonitorCallbackInfo>
	{
		private IntPtr m_ClientData;
		private IntPtr m_SystemMemoryMonitorReport;

		public IntPtr ClientDataPointer
		{
			get
			{
				return m_ClientData;
			}
		}

		public void Get(out MemoryMonitorCallbackInfo other)
		{
			other = default;
			
			object ClientDataPublic;
			Helper.Get(m_ClientData, out ClientDataPublic);
			other.ClientData = ClientDataPublic;
			other.SystemMemoryMonitorReport = m_SystemMemoryMonitorReport;
		}
	}
}
