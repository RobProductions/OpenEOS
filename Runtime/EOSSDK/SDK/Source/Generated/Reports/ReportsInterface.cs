// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;

namespace Epic.OnlineServices.Reports
{
	public sealed partial class ReportsInterface : Handle
	{
		public ReportsInterface()
		{
		}

		public ReportsInterface(IntPtr innerHandle) : base(innerHandle)
		{
		}

		/// <summary>
		/// Max length of a report context JSON payload, not including the <see langword="null" /> terminator.
		/// </summary>
		public const int REPORTCONTEXT_MAX_LENGTH = 4096;
		/// <summary>
		/// Max length of a report message text, not including the <see langword="null" /> terminator.
		/// </summary>
		public const int REPORTMESSAGE_MAX_LENGTH = 512;
		/// <summary>
		/// The most recent version of the <see cref="SendPlayerBehaviorReport" /> API.
		/// </summary>
		public const int SENDPLAYERBEHAVIORREPORT_API_LATEST = 2;

		/// <summary>
		/// Sends the provided report directly to the Epic Online Services back-end.
		/// </summary>
		/// <param name="options">
		/// Structure containing the player report information.
		/// </param>
		/// <param name="clientData">
		/// Optional client data provided by the user of the SDK.
		/// </param>
		/// <param name="completionDelegate">
		/// This function is called when the send operation completes.
		/// </param>
		public void SendPlayerBehaviorReport(ref SendPlayerBehaviorReportOptions options, object clientData, OnSendPlayerBehaviorReportCompleteCallback completionDelegate)
		{
			if (completionDelegate == null)
			{
				throw new ArgumentNullException("completionDelegate");
			}

			var optionsInternal = default(SendPlayerBehaviorReportOptionsInternal);
			optionsInternal.Set(ref options);

			var clientDataPointer = IntPtr.Zero;

			Helper.AddCallback(out clientDataPointer, clientData, completionDelegate);

			Bindings.EOS_Reports_SendPlayerBehaviorReport(InnerHandle, ref optionsInternal, clientDataPointer, OnSendPlayerBehaviorReportCompleteCallbackInternalImplementation.Delegate);

			Helper.Dispose(ref optionsInternal);
		}
	}
}
