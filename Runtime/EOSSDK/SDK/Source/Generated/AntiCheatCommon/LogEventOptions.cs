// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.AntiCheatCommon
{
	public struct LogEventOptions
	{
		/// <summary>
		/// Optional client who this event is primarily associated with. If not applicable, use 0.
		/// </summary>
		public IntPtr ClientHandle { get; set; }

		/// <summary>
		/// Unique event identifier previously configured in RegisterEvent
		/// </summary>
		public uint EventId { get; set; }

		/// <summary>
		/// Set of parameter types previously configured in RegisterEvent, and their values
		/// </summary>
		public LogEventParamPair[] Params { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct LogEventOptionsInternal : ISettable<LogEventOptions>
	{
		private int m_ApiVersion;
		private IntPtr m_ClientHandle;
		private uint m_EventId;
		private uint m_ParamsCount;
		private IntPtr m_Params;

		public void Set(ref LogEventOptions other)
		{
			Dispose();

			m_ApiVersion = AntiCheatCommonInterface.LOGEVENT_API_LATEST;
			m_ClientHandle = other.ClientHandle;
			m_EventId = other.EventId;
			Helper.Set<LogEventParamPair, LogEventParamPairInternal>(other.Params, ref m_Params, out m_ParamsCount, false);
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_ClientHandle);
			Helper.Dispose(ref m_Params);
		}
	}
}
