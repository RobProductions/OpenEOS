// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.AntiCheatCommon
{
	/// <summary>
	/// Structure containing details about a required client/peer action
	/// </summary>
	public struct OnClientActionRequiredCallbackInfo : ICallbackInfo
	{
		/// <summary>
		/// Caller-specified context data
		/// </summary>
		public object ClientData { get; set; }

		/// <summary>
		/// The identifier of the client/peer that this action applies to. See the RegisterClient and RegisterPeer functions.
		/// </summary>
		public IntPtr ClientHandle { get; set; }

		/// <summary>
		/// The action that must be applied to the specified client/peer
		/// </summary>
		public AntiCheatCommonClientAction ClientAction { get; set; }

		/// <summary>
		/// Code indicating the reason for the action. This can be displayed to the affected player.
		/// </summary>
		public AntiCheatCommonClientActionReason ActionReasonCode { get; set; }

		/// <summary>
		/// <see cref="Utf8String" /> containing details about the action reason. This can be displayed to the affected player.
		/// </summary>
		public Utf8String ActionReasonDetailsString { get; set; }

		public object GetClientData()
		{
			return ClientData;
		}

		public Result? GetResultCode()
		{
			return null;
		}
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct OnClientActionRequiredCallbackInfoInternal : ICallbackInfoInternal, IGettable<OnClientActionRequiredCallbackInfo>
	{
		private IntPtr m_ClientData;
		private IntPtr m_ClientHandle;
		private AntiCheatCommonClientAction m_ClientAction;
		private AntiCheatCommonClientActionReason m_ActionReasonCode;
		private IntPtr m_ActionReasonDetailsString;

		public IntPtr ClientDataPointer
		{
			get
			{
				return m_ClientData;
			}
		}

		public void Get(out OnClientActionRequiredCallbackInfo other)
		{
			other = default;
			
			object ClientDataPublic;
			Helper.Get(m_ClientData, out ClientDataPublic);
			other.ClientData = ClientDataPublic;
			other.ClientHandle = m_ClientHandle;
			other.ClientAction = m_ClientAction;
			other.ActionReasonCode = m_ActionReasonCode;
			Utf8String ActionReasonDetailsStringPublic;
			Helper.Get(m_ActionReasonDetailsString, out ActionReasonDetailsStringPublic);
			other.ActionReasonDetailsString = ActionReasonDetailsStringPublic;
		}
	}
}
