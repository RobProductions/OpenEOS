// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.AntiCheatCommon
{
	public struct LogPlayerUseAbilityOptions
	{
		/// <summary>
		/// Locally unique value used in RegisterClient/RegisterPeer
		/// </summary>
		public IntPtr PlayerHandle { get; set; }

		/// <summary>
		/// Game defined unique identifier for the ability being used
		/// </summary>
		public uint AbilityId { get; set; }

		/// <summary>
		/// Duration of the ability effect in milliseconds. If not applicable, use 0.
		/// </summary>
		public uint AbilityDurationMs { get; set; }

		/// <summary>
		/// Cooldown until the ability can be used again in milliseconds. If not applicable, use 0.
		/// </summary>
		public uint AbilityCooldownMs { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct LogPlayerUseAbilityOptionsInternal : ISettable<LogPlayerUseAbilityOptions>
	{
		private int m_ApiVersion;
		private IntPtr m_PlayerHandle;
		private uint m_AbilityId;
		private uint m_AbilityDurationMs;
		private uint m_AbilityCooldownMs;

		public void Set(ref LogPlayerUseAbilityOptions other)
		{
			Dispose();

			m_ApiVersion = AntiCheatCommonInterface.LOGPLAYERUSEABILITY_API_LATEST;
			m_PlayerHandle = other.PlayerHandle;
			m_AbilityId = other.AbilityId;
			m_AbilityDurationMs = other.AbilityDurationMs;
			m_AbilityCooldownMs = other.AbilityCooldownMs;
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_PlayerHandle);
		}
	}
}
