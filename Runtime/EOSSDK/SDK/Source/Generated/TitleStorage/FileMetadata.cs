// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.TitleStorage
{
	/// <summary>
	/// Metadata information for a specific file
	/// </summary>
	public struct FileMetadata
	{
		/// <summary>
		/// The total size of the file in bytes (Includes file header in addition to file contents).
		/// </summary>
		public uint FileSizeBytes { get; set; }

		/// <summary>
		/// The MD5 Hash of the entire file (including additional file header), in hex digits
		/// </summary>
		public Utf8String MD5Hash { get; set; }

		/// <summary>
		/// The file's name
		/// </summary>
		public Utf8String Filename { get; set; }

		/// <summary>
		/// The size of data (payload) in file in unencrypted (original) form.
		/// </summary>
		public uint UnencryptedDataSizeBytes { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct FileMetadataInternal : IGettable<FileMetadata>
	{
		private int m_ApiVersion;
		private uint m_FileSizeBytes;
		private IntPtr m_MD5Hash;
		private IntPtr m_Filename;
		private uint m_UnencryptedDataSizeBytes;

		public void Get(out FileMetadata other)
		{
			other = default;
			
			other.FileSizeBytes = m_FileSizeBytes;
			Utf8String MD5HashPublic;
			Helper.Get(m_MD5Hash, out MD5HashPublic);
			other.MD5Hash = MD5HashPublic;
			Utf8String FilenamePublic;
			Helper.Get(m_Filename, out FilenamePublic);
			other.Filename = FilenamePublic;
			other.UnencryptedDataSizeBytes = m_UnencryptedDataSizeBytes;
		}
	}
}
