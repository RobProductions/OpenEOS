// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.P2P
{
	[StructLayout(LayoutKind.Sequential)]
	internal struct SocketIdInternal : IGettable<SocketId>, ISettable<SocketId>
	{
		private int m_ApiVersion;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = P2PInterface.SOCKETID_SOCKETNAME_SIZE)]
		private byte[] m_SocketName;

		public void Get(out SocketId other)
		{
			other = default;
			
			Utf8String SocketNamePublic;
			Helper.Get(m_SocketName, out SocketNamePublic);
			other.SocketName = SocketNamePublic;
		}

		public void Set(ref SocketId other)
		{
			Dispose();

			m_ApiVersion = P2PInterface.SOCKETID_API_LATEST;
			Helper.Set(other.SocketName, ref m_SocketName, P2PInterface.SOCKETID_SOCKETNAME_SIZE);
		}

		public void Dispose()
		{
		}
	}
}
