// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.RTC
{
	/// <summary>
	/// This struct is used to call <see cref="RTCInterface.SetRoomSetting" />
	/// 
	/// Available values of SettingName:
	/// - DisableEchoCancelation: Disables the use of echo cancellation for the audio channel. Default "False".
	/// - DisableNoiseSupression: Disables the use of noise suppression for the audio channel. Default "False".
	/// - DisableAutoGainControl: Disables the use of auto gain control for the audio channel. Default "False".
	/// - DisableDtx: Allows to disable the use of DTX. Default "False".
	/// </summary>
	public struct SetRoomSettingOptions
	{
		/// <summary>
		/// The Product User ID of the user trying to request this operation.
		/// </summary>
		public ProductUserId LocalUserId { get; set; }

		/// <summary>
		/// The room the setting will be applied to.
		/// </summary>
		public Utf8String RoomName { get; set; }

		/// <summary>
		/// Setting that should be set.
		/// </summary>
		public Utf8String SettingName { get; set; }

		/// <summary>
		/// Value to set the setting to.
		/// </summary>
		public Utf8String SettingValue { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct SetRoomSettingOptionsInternal : ISettable<SetRoomSettingOptions>
	{
		private int m_ApiVersion;
		private IntPtr m_LocalUserId;
		private IntPtr m_RoomName;
		private IntPtr m_SettingName;
		private IntPtr m_SettingValue;

		public void Set(ref SetRoomSettingOptions other)
		{
			Dispose();

			m_ApiVersion = RTCInterface.SETROOMSETTING_API_LATEST;
			Helper.Set(other.LocalUserId, ref m_LocalUserId);
			Helper.Set(other.RoomName, ref m_RoomName);
			Helper.Set(other.SettingName, ref m_SettingName);
			Helper.Set(other.SettingValue, ref m_SettingValue);
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_LocalUserId);
			Helper.Dispose(ref m_RoomName);
			Helper.Dispose(ref m_SettingName);
			Helper.Dispose(ref m_SettingValue);
		}
	}
}
