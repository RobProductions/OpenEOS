// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.CustomInvites
{
	public struct FinalizeInviteOptions
	{
		/// <summary>
		/// User that sent the custom invite
		/// </summary>
		public ProductUserId TargetUserId { get; set; }

		/// <summary>
		/// Recipient Local user id
		/// </summary>
		public ProductUserId LocalUserId { get; set; }

		/// <summary>
		/// Id of the Custom Invite accepted
		/// </summary>
		public Utf8String CustomInviteId { get; set; }

		/// <summary>
		/// Result of the Processing operation, transmitted to Social Overlay if applicable
		/// </summary>
		public Result ProcessingResult { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct FinalizeInviteOptionsInternal : ISettable<FinalizeInviteOptions>
	{
		private int m_ApiVersion;
		private IntPtr m_TargetUserId;
		private IntPtr m_LocalUserId;
		private IntPtr m_CustomInviteId;
		private Result m_ProcessingResult;

		public void Set(ref FinalizeInviteOptions other)
		{
			Dispose();

			m_ApiVersion = CustomInvitesInterface.FINALIZEINVITE_API_LATEST;
			Helper.Set(other.TargetUserId, ref m_TargetUserId);
			Helper.Set(other.LocalUserId, ref m_LocalUserId);
			Helper.Set(other.CustomInviteId, ref m_CustomInviteId);
			m_ProcessingResult = other.ProcessingResult;
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_TargetUserId);
			Helper.Dispose(ref m_LocalUserId);
			Helper.Dispose(ref m_CustomInviteId);
		}
	}
}
