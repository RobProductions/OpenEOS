// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Stats
{
	/// <summary>
	/// Input parameters for the <see cref="StatsInterface.IngestStat" /> function.
	/// </summary>
	public struct IngestStatOptions
	{
		/// <summary>
		/// The Product User ID of the local user requesting the ingest. Set to <see langword="null" /> for dedicated server.
		/// </summary>
		public ProductUserId LocalUserId { get; set; }

		/// <summary>
		/// Stats to ingest.
		/// </summary>
		public IngestData[] Stats { get; set; }

		/// <summary>
		/// The Product User ID for the user whose stat is being ingested.
		/// </summary>
		public ProductUserId TargetUserId { get; set; }
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct IngestStatOptionsInternal : ISettable<IngestStatOptions>
	{
		private int m_ApiVersion;
		private IntPtr m_LocalUserId;
		private IntPtr m_Stats;
		private uint m_StatsCount;
		private IntPtr m_TargetUserId;

		public void Set(ref IngestStatOptions other)
		{
			Dispose();

			m_ApiVersion = StatsInterface.INGESTSTAT_API_LATEST;
			Helper.Set(other.LocalUserId, ref m_LocalUserId);
			Helper.Set<IngestData, IngestDataInternal>(other.Stats, ref m_Stats, out m_StatsCount, false);
			Helper.Set(other.TargetUserId, ref m_TargetUserId);
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_LocalUserId);
			Helper.Dispose(ref m_Stats);
			Helper.Dispose(ref m_TargetUserId);
		}
	}
}
