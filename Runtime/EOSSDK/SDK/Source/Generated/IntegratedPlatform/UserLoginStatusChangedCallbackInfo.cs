// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.IntegratedPlatform
{
	/// <summary>
	/// Data about which integrated platform and which user that had a login status change and what the login status changed to.
	/// </summary>
	public struct UserLoginStatusChangedCallbackInfo : ICallbackInfo
	{
		/// <summary>
		/// Context that was passed into <see cref="IntegratedPlatformInterface.AddNotifyUserLoginStatusChanged" />
		/// </summary>
		public object ClientData { get; set; }

		/// <summary>
		/// The integrated platform of the local platform user.
		/// </summary>
		public Utf8String PlatformType { get; set; }

		/// <summary>
		/// <see cref="Utf8String" /> version of platform's user id.
		/// </summary>
		public Utf8String LocalPlatformUserId { get; set; }

		/// <summary>
		/// The Epic Games Account ID associated with this Integrated Platform's User (if there is one)
		/// </summary>
		public EpicAccountId AccountId { get; set; }

		/// <summary>
		/// The EOS Product User ID associated with this Integrated Platform's User (if there is one)
		/// </summary>
		public ProductUserId ProductUserId { get; set; }

		/// <summary>
		/// The login status prior to this change.
		/// </summary>
		public LoginStatus PreviousLoginStatus { get; set; }

		/// <summary>
		/// The login status at the time of this notification.
		/// </summary>
		public LoginStatus CurrentLoginStatus { get; set; }

		public object GetClientData()
		{
			return ClientData;
		}

		public Result? GetResultCode()
		{
			return null;
		}
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct UserLoginStatusChangedCallbackInfoInternal : ICallbackInfoInternal, IGettable<UserLoginStatusChangedCallbackInfo>
	{
		private IntPtr m_ClientData;
		private IntPtr m_PlatformType;
		private IntPtr m_LocalPlatformUserId;
		private IntPtr m_AccountId;
		private IntPtr m_ProductUserId;
		private LoginStatus m_PreviousLoginStatus;
		private LoginStatus m_CurrentLoginStatus;

		public IntPtr ClientDataPointer
		{
			get
			{
				return m_ClientData;
			}
		}

		public void Get(out UserLoginStatusChangedCallbackInfo other)
		{
			other = default;
			
			object ClientDataPublic;
			Helper.Get(m_ClientData, out ClientDataPublic);
			other.ClientData = ClientDataPublic;
			Utf8String PlatformTypePublic;
			Helper.Get(m_PlatformType, out PlatformTypePublic);
			other.PlatformType = PlatformTypePublic;
			Utf8String LocalPlatformUserIdPublic;
			Helper.Get(m_LocalPlatformUserId, out LocalPlatformUserIdPublic);
			other.LocalPlatformUserId = LocalPlatformUserIdPublic;
			EpicAccountId AccountIdPublic;
			Helper.Get(m_AccountId, out AccountIdPublic);
			other.AccountId = AccountIdPublic;
			ProductUserId ProductUserIdPublic;
			Helper.Get(m_ProductUserId, out ProductUserIdPublic);
			other.ProductUserId = ProductUserIdPublic;
			other.PreviousLoginStatus = m_PreviousLoginStatus;
			other.CurrentLoginStatus = m_CurrentLoginStatus;
		}
	}
}
