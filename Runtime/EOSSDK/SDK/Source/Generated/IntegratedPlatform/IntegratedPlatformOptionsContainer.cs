// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;

namespace Epic.OnlineServices.IntegratedPlatform
{
	public sealed partial class IntegratedPlatformOptionsContainer : Handle
	{
		public IntegratedPlatformOptionsContainer()
		{
		}

		public IntegratedPlatformOptionsContainer(IntPtr innerHandle) : base(innerHandle)
		{
		}
		/// <summary>
		/// Adds an integrated platform options to the container.
		/// </summary>
		/// <param name="">
		/// Object containing properties related to setting a user's Status
		/// </param>
		/// <returns>
		/// Success if modification was added successfully, otherwise an error code related to the problem
		/// </returns>
		public Result Add(ref IntegratedPlatformOptionsContainerAddOptions inOptions)
		{
			var inOptionsInternal = default(IntegratedPlatformOptionsContainerAddOptionsInternal);
			inOptionsInternal.Set(ref inOptions);

			var callResult = Bindings.EOS_IntegratedPlatformOptionsContainer_Add(InnerHandle, ref inOptionsInternal);

			Helper.Dispose(ref inOptionsInternal);

			return callResult;
		}

		/// <summary>
		/// Release the memory associated with an <see cref="IntegratedPlatformOptionsContainer" /> handle. This must be called on Handles retrieved from <see cref="IntegratedPlatformInterface.CreateIntegratedPlatformOptionsContainer" />.
		/// This can be safely called on a <see langword="null" /> integrated platform options container handle.
		/// <see cref="IntegratedPlatformInterface.CreateIntegratedPlatformOptionsContainer" />
		/// </summary>
		/// <param name="integratedPlatformOptionsContainerHandle">
		/// The integrated platform options container handle to release.
		/// </param>
		public void Release()
		{
			Bindings.EOS_IntegratedPlatformOptionsContainer_Release(InnerHandle);
		}
	}
}
