// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

#if UNITY_IOS || __IOS__
	#define EOS_PLATFORM_IOS
#endif

#if EOS_PLATFORM_IOS
using System;

namespace Epic.OnlineServices.Auth
{
	public sealed partial class AuthInterface : Handle
	{
		/// <summary>
		/// The most recent version of the <see cref="IOSCredentialsSystemAuthCredentialsOptions" /> structure.
		/// </summary>
		public const int IOS_CREDENTIALSOPTIONS_API_LATEST = 2;

		/// <summary>
		/// Login/Authenticate with user credentials.
		/// </summary>
		/// <param name="options">
		/// structure containing the account credentials to use during the login operation
		/// </param>
		/// <param name="clientData">
		/// arbitrary data that is passed back to you in the CompletionDelegate
		/// </param>
		/// <param name="completionDelegate">
		/// a callback that is fired when the login operation completes, either successfully or in error
		/// </param>
		public void Login(ref IOSLoginOptions options, object clientData, OnLoginCallback completionDelegate)
		{
			if (completionDelegate == null)
			{
				throw new ArgumentNullException("completionDelegate");
			}

			var optionsInternal = default(IOSLoginOptionsInternal);
			optionsInternal.Set(ref options);

			var clientDataPointer = IntPtr.Zero;

			Helper.AddCallback(out clientDataPointer, clientData, completionDelegate);

			Helper.AddStaticCallback("Auth.IOSCreateBackgroundSnapshotView", options.Credentials?.SystemAuthCredentialsOptions?.CreateBackgroundSnapshotView);

			IOSBindings.EOS_Auth_Login_IOS(InnerHandle, ref optionsInternal, clientDataPointer, OnLoginCallbackInternalImplementation.Delegate);

			Helper.Dispose(ref optionsInternal);
		}
	}
}
#endif
