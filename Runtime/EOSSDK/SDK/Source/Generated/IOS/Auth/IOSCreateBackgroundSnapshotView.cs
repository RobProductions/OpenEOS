// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

#if UNITY_IOS || __IOS__
	#define EOS_PLATFORM_IOS
#endif

#if EOS_PLATFORM_IOS
using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Auth
{

	/// <summary>
	/// A callback function used to create snapshot views when the application is backgrounded while Account Portal is visible.
	/// 
	/// Each call should return a new instance.
	/// <see cref="IntPtr" /> must be retained using: CFBridgingRetain(viewInstance)
	/// If the view requires a CGRect for initWithFrame, CGRectZero should work
	/// Layout should be implemented in `layoutSubviews` or via constraints
	/// SDK will resize the <see cref="IntPtr" /> to match the UIWindow returned from ASWebAuthenticationPresentationContextProviding
	/// SDK will set autoresizing mask for fullscreen on the <see cref="IntPtr" /> (flexible width and height)
	/// </summary>
	public delegate IntPtr IOSCreateBackgroundSnapshotView(IntPtr context);

	[UnmanagedFunctionPointer(Common.LIBRARY_CALLING_CONVENTION)]
	internal delegate IntPtr IOSCreateBackgroundSnapshotViewInternal(IntPtr context);

	internal static class IOSCreateBackgroundSnapshotViewInternalImplementation
	{
		private static IOSCreateBackgroundSnapshotViewInternal s_Delegate;
		public static IOSCreateBackgroundSnapshotViewInternal Delegate
		{
			get
			{
				if (s_Delegate == null)
				{
					s_Delegate = new IOSCreateBackgroundSnapshotViewInternal(EntryPoint);
				}

				return s_Delegate;
			}
		}

		[MonoPInvokeCallback(typeof(IOSCreateBackgroundSnapshotViewInternal))]
		public static IntPtr EntryPoint(IntPtr context)
		{
			IOSCreateBackgroundSnapshotView callback;
			if (Helper.TryGetStaticCallback("Auth.IOSCreateBackgroundSnapshotView", out callback))
			{
				var callResult = callback(context);

				return callResult;
			}

			return default;
		}
	}
}
#endif
